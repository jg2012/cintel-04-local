[{"name": "app.py", "content": "import plotly.express as px\nimport palmerpenguins\nimport pandas as pd\nimport seaborn as sns  # Add this line\nfrom shiny import reactive, render\nfrom shiny.express import input, ui\nfrom shinywidgets import render_plotly\n\n# Load the Palmer Penguins dataset\npenguins_df = palmerpenguins.load_penguins()\n\n# Set page options\nui.page_opts(title=\"Jose Guzman's Penguin Data\", fillable=True)\n\n# Define reactive calculation to filter the data\n@reactive.calc\ndef filtered_data():\n    return penguins_df[penguins_df[\"species\"].isin(input.selected_species_list()) &\n                       penguins_df[\"island\"].isin(input.penguin_islands())]\n\n# Sidebar for user interaction\nwith ui.sidebar(open=\"open\"):\n    ui.h2(\"Menu\")\n    ui.a(\"GitHub\", href=\"https://github.com/jg2012/cintel-03-reactive/tree/main\", target=\"_blank\")\n    ui.input_selectize(\"selected_attribute\", \"Select Attribute\", \n                       [\"bill_length_mm\", \"bill_depth_mm\", \"flipper_length_mm\", \"body_mass_g\"])\n    ui.input_numeric(\"plotly_bin_count\", \"Number of Plotly Histogram Bins\", 20)\n    ui.input_slider(\"seaborn_bin_count\", \"Number of Seaborn Bins\", 1, 100, 20)\n    ui.hr()\n    ui.input_checkbox_group(\"selected_species_list\", \"Select Species\", \n                            [\"Adelie\", \"Gentoo\", \"Chinstrap\"], selected=[\"Adelie\"], inline=False)\n    ui.input_checkbox_group(\"penguin_islands\", \"Islands\", [\"Torgersen\", \"Biscoe\", \"Dream\"],\n                            selected=[\"Dream\"], inline=False)\n\n# Data Tables\nwith ui.nav_panel(\"Tables\"):\n    with ui.layout_columns():\n        with ui.card(width=6):  # Adjust the width of the cards as needed\n            ui.card_header(\"Palmer Penguins Data Table\")\n            @render.data_frame\n            def render_penguins_table():\n                return filtered_data()\n        with ui.card(width=6):  # Adjust the width of the cards as needed\n            ui.card_header(\"Palmer Penguins Data Grid\")\n            @render.data_frame\n            def penguins_data():\n                return render.DataGrid(penguins_df, row_selection_mode=\"multiple\") \n\n# Plots\nwith ui.nav_panel(\"Scatterplot\"):\n    with ui.layout_columns():\n        with ui.card():\n            ui.card_header(\"Plotly Scatterplot: Species\")\n            @render_plotly\n            def plotly_scatterplot():\n                return px.scatter(filtered_data(),\n                                   x=\"bill_length_mm\",\n                                   y=\"body_mass_g\",\n                                   color=\"species\",\n                                   title=\"Penguins Plot\",\n                                   labels={\"bill_length_mm\": \"Bill Length (mm)\",\n                                           \"body_mass_g\": \"Body Mass (g)\"})\n\n# Histograms\nwith ui.nav_panel(\"Histograms\"):\n    with ui.layout_columns():\n        with ui.card():\n            ui.card_header(\"Plotly Histogram\")\n            @render_plotly\n            def plotly_histogram():\n                return px.histogram(filtered_data(), x=input.selected_attribute(), nbins=input.plotly_bin_count())\n        with ui.card(full_screen=True):\n            ui.card_header(\"Seaborn Histogram\")\n            @render.plot(alt=\"Seaborn Histogram\")\n            def seaborn_histogram():\n                histplot = sns.histplot(filtered_data(), x=\"body_mass_g\", bins=input.seaborn_bin_count())\n                histplot.set_title(\"Palmer Penguins\")\n                histplot.set_xlabel(\"Mass\")\n                histplot.set_ylabel(\"Count\")\n                return histplot\n", "type": "text"}]